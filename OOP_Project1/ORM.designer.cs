#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OOP_Project1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="OMS")]
	public partial class ORMDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void Insert_Order(_Order instance);
    partial void Update_Order(_Order instance);
    partial void Delete_Order(_Order instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void Insertpurchase1(purchase1 instance);
    partial void Updatepurchase1(purchase1 instance);
    partial void Deletepurchase1(purchase1 instance);
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    #endregion
		
		public ORMDataContext() : 
				base(global::OOP_Project1.Properties.Settings.Default.OMSConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<_Order> _Orders
		{
			get
			{
				return this.GetTable<_Order>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<purchase1> purchase1s
		{
			get
			{
				return this.GetTable<purchase1>();
			}
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _cust_name;
		
		private System.Nullable<long> _contact_no;
		
		private string _email;
		
		private string _cust_address;
		
		private string _nic_no;
		
		private System.Nullable<int> _age;
		
		private System.Nullable<System.DateTime> _date_from;
		
		private System.Nullable<System.DateTime> _date_purch;
		
		private System.Nullable<System.DateTime> _dob;
		
		private EntitySet<_Order> @__Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Oncust_nameChanging(string value);
    partial void Oncust_nameChanged();
    partial void Oncontact_noChanging(System.Nullable<long> value);
    partial void Oncontact_noChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Oncust_addressChanging(string value);
    partial void Oncust_addressChanged();
    partial void Onnic_noChanging(string value);
    partial void Onnic_noChanged();
    partial void OnageChanging(System.Nullable<int> value);
    partial void OnageChanged();
    partial void Ondate_fromChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_fromChanged();
    partial void Ondate_purchChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_purchChanged();
    partial void OndobChanging(System.Nullable<System.DateTime> value);
    partial void OndobChanged();
    #endregion
		
		public Customer()
		{
			this.@__Orders = new EntitySet<_Order>(new Action<_Order>(this.attach__Orders), new Action<_Order>(this.detach__Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_name", DbType="VarChar(20)")]
		public string cust_name
		{
			get
			{
				return this._cust_name;
			}
			set
			{
				if ((this._cust_name != value))
				{
					this.Oncust_nameChanging(value);
					this.SendPropertyChanging();
					this._cust_name = value;
					this.SendPropertyChanged("cust_name");
					this.Oncust_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_no", DbType="BigInt")]
		public System.Nullable<long> contact_no
		{
			get
			{
				return this._contact_no;
			}
			set
			{
				if ((this._contact_no != value))
				{
					this.Oncontact_noChanging(value);
					this.SendPropertyChanging();
					this._contact_no = value;
					this.SendPropertyChanged("contact_no");
					this.Oncontact_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(30)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_address", DbType="VarChar(50)")]
		public string cust_address
		{
			get
			{
				return this._cust_address;
			}
			set
			{
				if ((this._cust_address != value))
				{
					this.Oncust_addressChanging(value);
					this.SendPropertyChanging();
					this._cust_address = value;
					this.SendPropertyChanged("cust_address");
					this.Oncust_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nic_no", DbType="VarChar(14)")]
		public string nic_no
		{
			get
			{
				return this._nic_no;
			}
			set
			{
				if ((this._nic_no != value))
				{
					this.Onnic_noChanging(value);
					this.SendPropertyChanging();
					this._nic_no = value;
					this.SendPropertyChanged("nic_no");
					this.Onnic_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age", DbType="Int")]
		public System.Nullable<int> age
		{
			get
			{
				return this._age;
			}
			set
			{
				if ((this._age != value))
				{
					this.OnageChanging(value);
					this.SendPropertyChanging();
					this._age = value;
					this.SendPropertyChanged("age");
					this.OnageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_from", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_from
		{
			get
			{
				return this._date_from;
			}
			set
			{
				if ((this._date_from != value))
				{
					this.Ondate_fromChanging(value);
					this.SendPropertyChanging();
					this._date_from = value;
					this.SendPropertyChanged("date_from");
					this.Ondate_fromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_purch", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_purch
		{
			get
			{
				return this._date_purch;
			}
			set
			{
				if ((this._date_purch != value))
				{
					this.Ondate_purchChanging(value);
					this.SendPropertyChanging();
					this._date_purch = value;
					this.SendPropertyChanged("date_purch");
					this.Ondate_purchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="DateTime")]
		public System.Nullable<System.DateTime> dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this.OndobChanging(value);
					this.SendPropertyChanging();
					this._dob = value;
					this.SendPropertyChanged("dob");
					this.OndobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer__Order", Storage="__Orders", ThisKey="Id", OtherKey="ID")]
		public EntitySet<_Order> _Orders
		{
			get
			{
				return this.@__Orders;
			}
			set
			{
				this.@__Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach__Orders(_Order entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach__Orders(_Order entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_Order]")]
	public partial class _Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderID;
		
		private System.Nullable<System.DateTime> _OrderDateTime;
		
		private int _ID;
		
		private EntitySet<purchase1> _purchase1s;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnOrderDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOrderDateTimeChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public _Order()
		{
			this._purchase1s = new EntitySet<purchase1>(new Action<purchase1>(this.attach_purchase1s), new Action<purchase1>(this.detach_purchase1s));
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OrderDateTime
		{
			get
			{
				return this._OrderDateTime;
			}
			set
			{
				if ((this._OrderDateTime != value))
				{
					this.OnOrderDateTimeChanging(value);
					this.SendPropertyChanging();
					this._OrderDateTime = value;
					this.SendPropertyChanged("OrderDateTime");
					this.OnOrderDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Order_purchase1", Storage="_purchase1s", ThisKey="OrderID", OtherKey="order_id")]
		public EntitySet<purchase1> purchase1s
		{
			get
			{
				return this._purchase1s;
			}
			set
			{
				this._purchase1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer__Order", Storage="_Customer", ThisKey="ID", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue._Orders.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value._Orders.Add(this);
						this._ID = value.Id;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_purchase1s(purchase1 entity)
		{
			this.SendPropertyChanging();
			entity._Order = this;
		}
		
		private void detach_purchase1s(purchase1 entity)
		{
			this.SendPropertyChanging();
			entity._Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _prod_id;
		
		private string _prod_type;
		
		private string _prod_name;
		
		private string _brand;
		
		private System.Nullable<double> _prod_price;
		
		private System.Nullable<int> _total_stock_purch;
		
		private System.Nullable<int> _available_stock;
		
		private string _supply_by;
		
		private System.Nullable<double> _purchasing_price;
		
		private System.Nullable<System.DateTime> _date_of_purchase;
		
		private System.Nullable<System.DateTime> _datetime_of_AddingProd;
		
		private EntitySet<purchase1> _purchase1s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onprod_idChanging(int value);
    partial void Onprod_idChanged();
    partial void Onprod_typeChanging(string value);
    partial void Onprod_typeChanged();
    partial void Onprod_nameChanging(string value);
    partial void Onprod_nameChanged();
    partial void OnbrandChanging(string value);
    partial void OnbrandChanged();
    partial void Onprod_priceChanging(System.Nullable<double> value);
    partial void Onprod_priceChanged();
    partial void Ontotal_stock_purchChanging(System.Nullable<int> value);
    partial void Ontotal_stock_purchChanged();
    partial void Onavailable_stockChanging(System.Nullable<int> value);
    partial void Onavailable_stockChanged();
    partial void Onsupply_byChanging(string value);
    partial void Onsupply_byChanged();
    partial void Onpurchasing_priceChanging(System.Nullable<double> value);
    partial void Onpurchasing_priceChanged();
    partial void Ondate_of_purchaseChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_of_purchaseChanged();
    partial void Ondatetime_of_AddingProdChanging(System.Nullable<System.DateTime> value);
    partial void Ondatetime_of_AddingProdChanged();
    #endregion
		
		public Product()
		{
			this._purchase1s = new EntitySet<purchase1>(new Action<purchase1>(this.attach_purchase1s), new Action<purchase1>(this.detach_purchase1s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prod_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int prod_id
		{
			get
			{
				return this._prod_id;
			}
			set
			{
				if ((this._prod_id != value))
				{
					this.Onprod_idChanging(value);
					this.SendPropertyChanging();
					this._prod_id = value;
					this.SendPropertyChanged("prod_id");
					this.Onprod_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prod_type", DbType="VarChar(MAX)")]
		public string prod_type
		{
			get
			{
				return this._prod_type;
			}
			set
			{
				if ((this._prod_type != value))
				{
					this.Onprod_typeChanging(value);
					this.SendPropertyChanging();
					this._prod_type = value;
					this.SendPropertyChanged("prod_type");
					this.Onprod_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prod_name", DbType="VarChar(20)")]
		public string prod_name
		{
			get
			{
				return this._prod_name;
			}
			set
			{
				if ((this._prod_name != value))
				{
					this.Onprod_nameChanging(value);
					this.SendPropertyChanging();
					this._prod_name = value;
					this.SendPropertyChanged("prod_name");
					this.Onprod_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brand", DbType="VarChar(30)")]
		public string brand
		{
			get
			{
				return this._brand;
			}
			set
			{
				if ((this._brand != value))
				{
					this.OnbrandChanging(value);
					this.SendPropertyChanging();
					this._brand = value;
					this.SendPropertyChanged("brand");
					this.OnbrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prod_price", DbType="Float")]
		public System.Nullable<double> prod_price
		{
			get
			{
				return this._prod_price;
			}
			set
			{
				if ((this._prod_price != value))
				{
					this.Onprod_priceChanging(value);
					this.SendPropertyChanging();
					this._prod_price = value;
					this.SendPropertyChanged("prod_price");
					this.Onprod_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_stock_purch", DbType="Int")]
		public System.Nullable<int> total_stock_purch
		{
			get
			{
				return this._total_stock_purch;
			}
			set
			{
				if ((this._total_stock_purch != value))
				{
					this.Ontotal_stock_purchChanging(value);
					this.SendPropertyChanging();
					this._total_stock_purch = value;
					this.SendPropertyChanged("total_stock_purch");
					this.Ontotal_stock_purchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_available_stock", DbType="Int")]
		public System.Nullable<int> available_stock
		{
			get
			{
				return this._available_stock;
			}
			set
			{
				if ((this._available_stock != value))
				{
					this.Onavailable_stockChanging(value);
					this.SendPropertyChanging();
					this._available_stock = value;
					this.SendPropertyChanged("available_stock");
					this.Onavailable_stockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supply_by", DbType="VarChar(20)")]
		public string supply_by
		{
			get
			{
				return this._supply_by;
			}
			set
			{
				if ((this._supply_by != value))
				{
					this.Onsupply_byChanging(value);
					this.SendPropertyChanging();
					this._supply_by = value;
					this.SendPropertyChanged("supply_by");
					this.Onsupply_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchasing_price", DbType="Float")]
		public System.Nullable<double> purchasing_price
		{
			get
			{
				return this._purchasing_price;
			}
			set
			{
				if ((this._purchasing_price != value))
				{
					this.Onpurchasing_priceChanging(value);
					this.SendPropertyChanging();
					this._purchasing_price = value;
					this.SendPropertyChanged("purchasing_price");
					this.Onpurchasing_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_of_purchase", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_of_purchase
		{
			get
			{
				return this._date_of_purchase;
			}
			set
			{
				if ((this._date_of_purchase != value))
				{
					this.Ondate_of_purchaseChanging(value);
					this.SendPropertyChanging();
					this._date_of_purchase = value;
					this.SendPropertyChanged("date_of_purchase");
					this.Ondate_of_purchaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datetime_of_AddingProd", DbType="DateTime")]
		public System.Nullable<System.DateTime> datetime_of_AddingProd
		{
			get
			{
				return this._datetime_of_AddingProd;
			}
			set
			{
				if ((this._datetime_of_AddingProd != value))
				{
					this.Ondatetime_of_AddingProdChanging(value);
					this.SendPropertyChanging();
					this._datetime_of_AddingProd = value;
					this.SendPropertyChanged("datetime_of_AddingProd");
					this.Ondatetime_of_AddingProdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_purchase1", Storage="_purchase1s", ThisKey="prod_id", OtherKey="prod_Id")]
		public EntitySet<purchase1> purchase1s
		{
			get
			{
				return this._purchase1s;
			}
			set
			{
				this._purchase1s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_purchase1s(purchase1 entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_purchase1s(purchase1 entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.purchase1")]
	public partial class purchase1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _order_id;
		
		private int _prod_Id;
		
		private System.Nullable<int> _OrderQuantity;
		
		private System.Nullable<double> _Total_Amount;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<_Order> @__Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorder_idChanging(int value);
    partial void Onorder_idChanged();
    partial void Onprod_IdChanging(int value);
    partial void Onprod_IdChanged();
    partial void OnOrderQuantityChanging(System.Nullable<int> value);
    partial void OnOrderQuantityChanged();
    partial void OnTotal_AmountChanging(System.Nullable<double> value);
    partial void OnTotal_AmountChanged();
    #endregion
		
		public purchase1()
		{
			this._Product = default(EntityRef<Product>);
			this.@__Order = default(EntityRef<_Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					if (this.@__Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prod_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int prod_Id
		{
			get
			{
				return this._prod_Id;
			}
			set
			{
				if ((this._prod_Id != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onprod_IdChanging(value);
					this.SendPropertyChanging();
					this._prod_Id = value;
					this.SendPropertyChanged("prod_Id");
					this.Onprod_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderQuantity", DbType="Int")]
		public System.Nullable<int> OrderQuantity
		{
			get
			{
				return this._OrderQuantity;
			}
			set
			{
				if ((this._OrderQuantity != value))
				{
					this.OnOrderQuantityChanging(value);
					this.SendPropertyChanging();
					this._OrderQuantity = value;
					this.SendPropertyChanged("OrderQuantity");
					this.OnOrderQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Total Amount]", Storage="_Total_Amount", DbType="Float")]
		public System.Nullable<double> Total_Amount
		{
			get
			{
				return this._Total_Amount;
			}
			set
			{
				if ((this._Total_Amount != value))
				{
					this.OnTotal_AmountChanging(value);
					this.SendPropertyChanging();
					this._Total_Amount = value;
					this.SendPropertyChanged("Total_Amount");
					this.OnTotal_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_purchase1", Storage="_Product", ThisKey="prod_Id", OtherKey="prod_id", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.purchase1s.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.purchase1s.Add(this);
						this._prod_Id = value.prod_id;
					}
					else
					{
						this._prod_Id = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_Order_purchase1", Storage="__Order", ThisKey="order_id", OtherKey="OrderID", IsForeignKey=true)]
		public _Order _Order
		{
			get
			{
				return this.@__Order.Entity;
			}
			set
			{
				_Order previousValue = this.@__Order.Entity;
				if (((previousValue != value) 
							|| (this.@__Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__Order.Entity = null;
						previousValue.purchase1s.Remove(this);
					}
					this.@__Order.Entity = value;
					if ((value != null))
					{
						value.purchase1s.Add(this);
						this._order_id = value.OrderID;
					}
					else
					{
						this._order_id = default(int);
					}
					this.SendPropertyChanged("_Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admins")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdmId;
		
		private string _Admname;
		
		private string _passwd;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdmIdChanging(int value);
    partial void OnAdmIdChanged();
    partial void OnAdmnameChanging(string value);
    partial void OnAdmnameChanged();
    partial void OnpasswdChanging(string value);
    partial void OnpasswdChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AdmId
		{
			get
			{
				return this._AdmId;
			}
			set
			{
				if ((this._AdmId != value))
				{
					this.OnAdmIdChanging(value);
					this.SendPropertyChanging();
					this._AdmId = value;
					this.SendPropertyChanged("AdmId");
					this.OnAdmIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admname", DbType="VarChar(10)")]
		public string Admname
		{
			get
			{
				return this._Admname;
			}
			set
			{
				if ((this._Admname != value))
				{
					this.OnAdmnameChanging(value);
					this.SendPropertyChanging();
					this._Admname = value;
					this.SendPropertyChanged("Admname");
					this.OnAdmnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwd", DbType="VarChar(20)")]
		public string passwd
		{
			get
			{
				return this._passwd;
			}
			set
			{
				if ((this._passwd != value))
				{
					this.OnpasswdChanging(value);
					this.SendPropertyChanging();
					this._passwd = value;
					this.SendPropertyChanged("passwd");
					this.OnpasswdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _emp_id;
		
		private string _emp_name;
		
		private string _designation;
		
		private string _email;
		
		private string _address;
		
		private string _cnic;
		
		private System.Nullable<int> _age;
		
		private string _contact_no;
		
		private string _religion;
		
		private string _DOB;
		
		private EntitySet<user> _users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onemp_idChanging(int value);
    partial void Onemp_idChanged();
    partial void Onemp_nameChanging(string value);
    partial void Onemp_nameChanged();
    partial void OndesignationChanging(string value);
    partial void OndesignationChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncnicChanging(string value);
    partial void OncnicChanged();
    partial void OnageChanging(System.Nullable<int> value);
    partial void OnageChanged();
    partial void Oncontact_noChanging(string value);
    partial void Oncontact_noChanged();
    partial void OnreligionChanging(string value);
    partial void OnreligionChanged();
    partial void OnDOBChanging(string value);
    partial void OnDOBChanged();
    #endregion
		
		public Employee()
		{
			this._users = new EntitySet<user>(new Action<user>(this.attach_users), new Action<user>(this.detach_users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int emp_id
		{
			get
			{
				return this._emp_id;
			}
			set
			{
				if ((this._emp_id != value))
				{
					this.Onemp_idChanging(value);
					this.SendPropertyChanging();
					this._emp_id = value;
					this.SendPropertyChanged("emp_id");
					this.Onemp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emp_name", DbType="VarChar(50)")]
		public string emp_name
		{
			get
			{
				return this._emp_name;
			}
			set
			{
				if ((this._emp_name != value))
				{
					this.Onemp_nameChanging(value);
					this.SendPropertyChanging();
					this._emp_name = value;
					this.SendPropertyChanged("emp_name");
					this.Onemp_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_designation", DbType="VarChar(50)")]
		public string designation
		{
			get
			{
				return this._designation;
			}
			set
			{
				if ((this._designation != value))
				{
					this.OndesignationChanging(value);
					this.SendPropertyChanging();
					this._designation = value;
					this.SendPropertyChanged("designation");
					this.OndesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(50)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cnic", DbType="VarChar(50)")]
		public string cnic
		{
			get
			{
				return this._cnic;
			}
			set
			{
				if ((this._cnic != value))
				{
					this.OncnicChanging(value);
					this.SendPropertyChanging();
					this._cnic = value;
					this.SendPropertyChanged("cnic");
					this.OncnicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age", DbType="Int")]
		public System.Nullable<int> age
		{
			get
			{
				return this._age;
			}
			set
			{
				if ((this._age != value))
				{
					this.OnageChanging(value);
					this.SendPropertyChanging();
					this._age = value;
					this.SendPropertyChanged("age");
					this.OnageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_no", DbType="VarChar(50)")]
		public string contact_no
		{
			get
			{
				return this._contact_no;
			}
			set
			{
				if ((this._contact_no != value))
				{
					this.Oncontact_noChanging(value);
					this.SendPropertyChanging();
					this._contact_no = value;
					this.SendPropertyChanged("contact_no");
					this.Oncontact_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_religion", DbType="VarChar(50)")]
		public string religion
		{
			get
			{
				return this._religion;
			}
			set
			{
				if ((this._religion != value))
				{
					this.OnreligionChanging(value);
					this.SendPropertyChanging();
					this._religion = value;
					this.SendPropertyChanged("religion");
					this.OnreligionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="VarChar(50)")]
		public string DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_user", Storage="_users", ThisKey="emp_id", OtherKey="userId")]
		public EntitySet<user> users
		{
			get
			{
				return this._users;
			}
			set
			{
				this._users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _userId;
		
		private string _Username;
		
		private string _passwd;
		
		private EntityRef<Employee> _Employee1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserIdChanging(int value);
    partial void OnuserIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnpasswdChanging(string value);
    partial void OnpasswdChanged();
    #endregion
		
		public user()
		{
			this._Employee1 = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(10)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwd", DbType="VarChar(20)")]
		public string passwd
		{
			get
			{
				return this._passwd;
			}
			set
			{
				if ((this._passwd != value))
				{
					this.OnpasswdChanging(value);
					this.SendPropertyChanging();
					this._passwd = value;
					this.SendPropertyChanged("passwd");
					this.OnpasswdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_user", Storage="_Employee1", ThisKey="userId", OtherKey="emp_id", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.users.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.users.Add(this);
						this._userId = value.emp_id;
					}
					else
					{
						this._userId = default(int);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
